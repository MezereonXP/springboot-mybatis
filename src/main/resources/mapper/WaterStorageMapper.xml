<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.spring.springboot.dao.WaterStorageMapper">
    <resultMap id="BaseResultMap" type="org.spring.springboot.domain.WaterStorage">
        <id column="waterStorageId" jdbcType="INTEGER" property="waterStorageId"/>
        <result column="waterStorageDesc" jdbcType="VARCHAR" property="waterStorageDesc"/>
        <result column="AvgStorageHrs" jdbcType="INTEGER" property="avgStorageHrs"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    waterStorageId, waterStorageDesc, AvgStorageHrs
  </sql>
    <select id="selectByExample" parameterType="org.spring.springboot.domain.WaterStorageExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        'true' as QUERYID,
        <include refid="Base_Column_List"/>
        from waterstorage
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from waterstorage
        where waterStorageId = #{waterStorageId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from waterstorage
    where waterStorageId = #{waterStorageId,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="org.spring.springboot.domain.WaterStorageExample">
        delete from waterstorage
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="org.spring.springboot.domain.WaterStorage">
    insert into waterstorage (waterStorageId, waterStorageDesc, 
      AvgStorageHrs)
    values (#{waterStorageId,jdbcType=INTEGER}, #{waterStorageDesc,jdbcType=VARCHAR}, 
      #{avgStorageHrs,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="org.spring.springboot.domain.WaterStorage">
        insert into waterstorage
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="waterStorageId != null">
                waterStorageId,
            </if>
            <if test="waterStorageDesc != null">
                waterStorageDesc,
            </if>
            <if test="avgStorageHrs != null">
                AvgStorageHrs,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="waterStorageId != null">
                #{waterStorageId,jdbcType=INTEGER},
            </if>
            <if test="waterStorageDesc != null">
                #{waterStorageDesc,jdbcType=VARCHAR},
            </if>
            <if test="avgStorageHrs != null">
                #{avgStorageHrs,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="org.spring.springboot.domain.WaterStorageExample" resultType="java.lang.Long">
        select count(*) from waterstorage
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update waterstorage
        <set>
            <if test="record.waterStorageId != null">
                waterStorageId = #{record.waterStorageId,jdbcType=INTEGER},
            </if>
            <if test="record.waterStorageDesc != null">
                waterStorageDesc = #{record.waterStorageDesc,jdbcType=VARCHAR},
            </if>
            <if test="record.avgStorageHrs != null">
                AvgStorageHrs = #{record.avgStorageHrs,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update waterstorage
        set waterStorageId = #{record.waterStorageId,jdbcType=INTEGER},
        waterStorageDesc = #{record.waterStorageDesc,jdbcType=VARCHAR},
        AvgStorageHrs = #{record.avgStorageHrs,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="org.spring.springboot.domain.WaterStorage">
        update waterstorage
        <set>
            <if test="waterStorageDesc != null">
                waterStorageDesc = #{waterStorageDesc,jdbcType=VARCHAR},
            </if>
            <if test="avgStorageHrs != null">
                AvgStorageHrs = #{avgStorageHrs,jdbcType=INTEGER},
            </if>
        </set>
        where waterStorageId = #{waterStorageId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="org.spring.springboot.domain.WaterStorage">
    update waterstorage
    set waterStorageDesc = #{waterStorageDesc,jdbcType=VARCHAR},
      AvgStorageHrs = #{avgStorageHrs,jdbcType=INTEGER}
    where waterStorageId = #{waterStorageId,jdbcType=INTEGER}
  </update>
</mapper>