<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.spring.springboot.dao.VisualMapper">
    <resultMap id="BaseResultMap" type="org.spring.springboot.domain.Visual">
        <id column="visualID" jdbcType="INTEGER" property="visualID"/>
        <result column="visualDesc" jdbcType="VARCHAR" property="visualDesc"/>
        <result column="visualDescDetails" jdbcType="VARCHAR" property="visualDescDetails"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    visualID, visualDesc, visualDescDetails
  </sql>
    <select id="selectByExample" parameterType="org.spring.springboot.domain.VisualExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        'true' as QUERYID,
        <include refid="Base_Column_List"/>
        from visual
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from visual
        where visualID = #{visualID,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from visual
    where visualID = #{visualID,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="org.spring.springboot.domain.VisualExample">
        delete from visual
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="org.spring.springboot.domain.Visual" useGeneratedKeys="true"
            keyProperty="visualID">
    insert into visual (visualID, visualDesc, visualDescDetails
      )
    values (#{visualID,jdbcType=INTEGER}, #{visualDesc,jdbcType=VARCHAR}, #{visualDescDetails,jdbcType=VARCHAR}
      )
  </insert>
    <insert id="insertSelective" parameterType="org.spring.springboot.domain.Visual" useGeneratedKeys="true"
            keyProperty="visualID">
        insert into visual
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="visualID != null">
                visualID,
            </if>
            <if test="visualDesc != null">
                visualDesc,
            </if>
            <if test="visualDescDetails != null">
                visualDescDetails,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="visualID != null">
                #{visualID,jdbcType=INTEGER},
            </if>
            <if test="visualDesc != null">
                #{visualDesc,jdbcType=VARCHAR},
            </if>
            <if test="visualDescDetails != null">
                #{visualDescDetails,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="org.spring.springboot.domain.VisualExample" resultType="java.lang.Long">
        select count(*) from visual
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update visual
        <set>
            <if test="record.visualID != null">
                visualID = #{record.visualID,jdbcType=INTEGER},
            </if>
            <if test="record.visualDesc != null">
                visualDesc = #{record.visualDesc,jdbcType=VARCHAR},
            </if>
            <if test="record.visualDescDetails != null">
                visualDescDetails = #{record.visualDescDetails,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update visual
        set visualID = #{record.visualID,jdbcType=INTEGER},
        visualDesc = #{record.visualDesc,jdbcType=VARCHAR},
        visualDescDetails = #{record.visualDescDetails,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="org.spring.springboot.domain.Visual">
        update visual
        <set>
            <if test="visualDesc != null">
                visualDesc = #{visualDesc,jdbcType=VARCHAR},
            </if>
            <if test="visualDescDetails != null">
                visualDescDetails = #{visualDescDetails,jdbcType=VARCHAR},
            </if>
        </set>
        where visualID = #{visualID,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="org.spring.springboot.domain.Visual">
    update visual
    set visualDesc = #{visualDesc,jdbcType=VARCHAR},
      visualDescDetails = #{visualDescDetails,jdbcType=VARCHAR}
    where visualID = #{visualID,jdbcType=INTEGER}
  </update>
</mapper>