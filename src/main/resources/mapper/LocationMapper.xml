<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.spring.springboot.dao.LocationDao">
  <resultMap id="BaseResultMap" type="org.spring.springboot.domain.Location">
    <id column="locationid" jdbcType="INTEGER" property="locationid" />
    <result column="villageid" jdbcType="INTEGER" property="villageid" />
    <result column="locationname" jdbcType="VARCHAR" property="locationname" />
    <result column="lat" jdbcType="DOUBLE" property="lat" />
    <result column="lon" jdbcType="DOUBLE" property="lon" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="createdat" jdbcType="DATE" property="createdat" />
    <result column="updateat" jdbcType="DATE" property="updateat" />
    <result column="blogid" jdbcType="INTEGER" property="blogid" />
  </resultMap>
  <sql id="Base_Column_List">
    locationid, villageid, locationname, lat, lon, status, createdat, updateat, blogid
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from location
    where locationid = #{locationid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from location
    where locationid = #{locationid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.spring.springboot.domain.Location">
    insert into location (locationid, villageid, locationname,
    lat, lon, status, createdat,
    updateat, blogid)
    values (#{locationid,jdbcType=INTEGER}, #{villageid,jdbcType=INTEGER}, #{locationname,jdbcType=VARCHAR},
    #{lat,jdbcType=DOUBLE}, #{lon,jdbcType=DOUBLE}, #{status,jdbcType=INTEGER}, #{createdat,jdbcType=DATE},
    #{updateat,jdbcType=DATE}, #{blogid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="org.spring.springboot.domain.Location">
    insert into location
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="locationid != null">
        locationid,
      </if>
      <if test="villageid != null">
        villageid,
      </if>
      <if test="locationname != null">
        locationname,
      </if>
      <if test="lat != null">
        lat,
      </if>
      <if test="lon != null">
        lon,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createdat != null">
        createdat,
      </if>
      <if test="updateat != null">
        updateat,
      </if>
      <if test="blogid != null">
        blogid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="locationid != null">
        #{locationid,jdbcType=INTEGER},
      </if>
      <if test="villageid != null">
        #{villageid,jdbcType=INTEGER},
      </if>
      <if test="locationname != null">
        #{locationname,jdbcType=VARCHAR},
      </if>
      <if test="lat != null">
        #{lat,jdbcType=DOUBLE},
      </if>
      <if test="lon != null">
        #{lon,jdbcType=DOUBLE},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createdat != null">
        #{createdat,jdbcType=DATE},
      </if>
      <if test="updateat != null">
        #{updateat,jdbcType=DATE},
      </if>
      <if test="blogid != null">
        #{blogid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.spring.springboot.domain.Location">
    update location
    <set>
      <if test="villageid != null">
        villageid = #{villageid,jdbcType=INTEGER},
      </if>
      <if test="locationname != null">
        locationname = #{locationname,jdbcType=VARCHAR},
      </if>
      <if test="lat != null">
        lat = #{lat,jdbcType=DOUBLE},
      </if>
      <if test="lon != null">
        lon = #{lon,jdbcType=DOUBLE},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createdat != null">
        createdat = #{createdat,jdbcType=DATE},
      </if>
      <if test="updateat != null">
        updateat = #{updateat,jdbcType=DATE},
      </if>
      <if test="blogid != null">
        blogid = #{blogid,jdbcType=INTEGER},
      </if>
    </set>
    where locationid = #{locationid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.spring.springboot.domain.Location">
    update location
    set villageid = #{villageid,jdbcType=INTEGER},
      locationname = #{locationname,jdbcType=VARCHAR},
      lat = #{lat,jdbcType=DOUBLE},
      lon = #{lon,jdbcType=DOUBLE},
      status = #{status,jdbcType=INTEGER},
      createdat = #{createdat,jdbcType=DATE},
      updateat = #{updateat,jdbcType=DATE},
      blogid = #{blogid,jdbcType=INTEGER}
    where locationid = #{locationid,jdbcType=INTEGER}
  </update>
</mapper>